<% content_for :header do %>
    <div class="container-fluid">
      <div class="navbar-header">
        <p class="navbar-brand">CoMapEd</p>
      </div>
      <p class = "navbar-text"><%= t('.code')%>: <b><%= @concept_map.code%></b></p>
      <p class = "navbar-text"><%= t('.mail')%>:</p>
      <form class="navbar-form navbar-left">
        <div id="emailgroup" class="form-group">
          <input id="email" type="email" class="form-control" placeholder="<%= t('email')%>">
        </div>
        <button id="submit" type="submit" class="btn btn-default" onclick="sendMail();return false;"><%= t('.send')%></button>
      </form>
      <ul class="nav navbar-nav navbar-right">
        <li class="dropdown">
          <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false"><%= t('.help') %><span class="caret"></span></a>
          <ul class="dropdown-menu">
            <li><%= link_to t('.help_short'), '', onclick: "$('#context_help').removeClass('hidden');return false;"%></li>
            <li><%= link_to t('.help_info'), '', onclick: "$('#info').removeClass('hidden');return false;"%></li>
          </ul>
        </li>
        <li class="dropdown">
          <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false"><%= t('export') %><span class="caret"></span></a>
          <ul class="dropdown-menu">
            <li><%= link_to 'TGF', concept_map_path(@concept_map, format: 'text')%></li>
            <li><a id="png_link" href="#" download="<%= @concept_map.code%>.png" onclick="$('#png_link').attr('href', $('canvas')[0].toDataURL());">PNG</a></li>
          </ul>
        </li>
        <li><%= link_to t('logout'), logout_path(target: 'frontend')%></li>
      </ul>
    </div>
<% end %>

<% if @concept_map.accesses <= 2 && !@concept_map.survey.introduction.blank? %>
  <div class="alert alert-warning alert-dismissible" role="alert">
    <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
    <%= @concept_map.survey.introduction %>
  </div>
<% end %>


<div id="info" class="alert alert-info <% if @concept_map.accesses > 2 %> hidden <% end %>">
  <button type="button" class="close" aria-label="Close" onclick="$('#info').addClass('hidden');return false;"><span aria-hidden="true">&times;</span></button>
  <%= render 'info'%>
</div>

<div id="context_help" class="alert alert-info <% if @concept_map.accesses > 2 %> hidden <% end %>">
  <button type="button" class="close" aria-label="Close" onclick="$('#context_help').addClass('hidden');return false;"><span aria-hidden="true">&times;</span></button>
  <p id="context_help_text">
  </p>
  <%= render 'context_help'%>
</div>

<div id="map" class="well" style="background-color: #f8f8f8; height: 100%">
</div>

<div id="panel" class="hidden panel panel-default" style="position:absolute;left:0px;top:0px">
  <div class="panel-body">
    <p><em id="action"></em></p>
    <form id="form" class="form-inline" method="post" data-remote="true">
      <div class="form-group">
        <% if @concept_map.survey.association_labels.blank? %>
            <input id="entry_link" class="form-control" name="link[label]" placeholder="<%= t :name %>" type="text" />
        <% else %>
            <%= select_tag 'link[label]', options_for_select(@concept_map.survey.association_labels.split(',').map{|l| l.strip}), id: 'entry_link', class: 'form-control' %>
        <% end %>
        <input id="entry_concept" class="form-control" name="concept[label]" placeholder="<%= t :name %>" type="text" />
        <input id="x" type="hidden" name="concept[data[x]]"/>
        <input id="y" type="hidden" name="concept[data[y]]"/>
        <input id="color" type="hidden" name="concept[data[color]]"/>
        <input id="start" type="hidden" name="link[start]"/>
        <input id="end" type="hidden" name="link[end]"/>
      </div>
      <div class="form-group" >
        <div class="dropdown" style="display: inline-block">
          <div id="currentColor" class="btn dropdown-toggle" data-toggle="dropdown" style="background-color: #dff0d8;color: black">
            Farbe
            <span class="caret"></span>
          </div>
          <div class="dropdown-menu">
            <table>
              <tr>
                <td style="padding-left: 5px;"><div id="color1" class="btn" style="width: 30px;height:30px;background-color: #dff0d8;" onclick="changeColor('color1')"></div></td>
                <td style="padding-left: 5px;"><div id="color2" class="btn" style="width: 30px;height:30px;background-color: greenyellow" onclick="changeColor('color2')"></div></td>
                <td style="padding-left: 5px;"><div id="color3" class="btn" style="width: 30px;height:30px;background-color: green" onclick="changeColor('color3')"></div></td>
                <td style="padding-left: 5px;"><div id="color4" class="btn" style="width: 30px;height:30px;background-color: plum" onclick="changeColor('color4')"></div></td>
              </tr>
              <tr>
                <td style="padding-left:5px; padding-top: 2px"><div id="color5" class="btn" style="width: 30px;height:30px;background-color: yellow" onclick="changeColor('color5')"></div></td>
                <td style="padding-left: 5px; padding-top: 2px"><div id="color6" class="btn" style="width: 30px;height:30px;background-color: orange" onclick="changeColor('color6')"></div></td>
                <td style="padding-left: 5px; padding-top: 2px"><div id="color7" class="btn" style="width: 30px;height:30px;background-color: blue" onclick="changeColor('color7')"></div></td>
                <td style="padding-left: 5px; padding-top: 2px"><div id="color8" class="btn" style="width: 30px;height:30px;background-color: deepskyblue" onclick="changeColor('color8')"></div></td>
              </tr>
            </table>
          </div>
        </div>
        <button class="btn btn-sm btn-success" onclick="return validateForm();"><span class="glyphicon glyphicon-ok"></span></button>
        <button class="btn btn-sm btn-default"onclick="hideForm();return false;"><span class="glyphicon glyphicon-remove"></span></button>
        <button id="delete" class="btn btn-sm btn-danger" onclick="destroy();return false;"><span class="glyphicon glyphicon-trash"></span></button>
      </div>
    </form>
  </div>
</div>

<script type="text/javascript">
    const none = 0;
    const addNode = 1;
    const editNode = 2;
    const addEdge = 3;
    const editEdge = 4;
    const dragNode = 5;

    var mode = none;
    var canvasX = 0, canvasY = 0, id = 0, color=$('#currentColor').css('background-color');
    var nodes = new vis.DataSet([
        <% @concept_map.concepts.each do |c| %>
        <%= render c %>,
        <% end %>
    ]);

    var edges = new vis.DataSet([
        <% @concept_map.links.each do |l| %>
        <%= render l %>,
        <% end %>
    ]);

    var container = document.getElementById('map');

    var data = {
        nodes: nodes,
        edges: edges
    };

    var options = {
        autoResize: true,
        height: '100%',
        width: '100%',
        edges: {
          arrows : {
              to: {
                  enabled: true,
                  scaleFactor: 0.75
              },
          },
          smooth: false
        },
        physics: {
            enabled: false
        },
        interaction : {
            hover: true,
            navigationButtons: true,
            selectConnectedEdges: false,
            hoverConnectedEdges: false,
        }
    };

    var network = new vis.Network(container, data, options);
    $('#context_help_text').html($('#ch_normal').html());

    network.on("hoverNode", function (params) {
      if (mode == none)
        $('#context_help_text').html($('#ch_hovernode').html());
      network.canvas.body.container.style.cursor = 'pointer'
    });
    network.on("hoverEdge", function (params) {
      if (mode == none)
        $('#context_help_text').html($('#ch_hoveredge').html());
      network.canvas.body.container.style.cursor = 'pointer'
    });

    network.on("blurNode", function (params) {
      if (mode == none)
        $('#context_help_text').html($('#ch_normal').html());
      network.canvas.body.container.style.cursor = 'default'
    });
    network.on("blurEdge", function (params) {
      if (mode == none)
        $('#context_help_text').html($('#ch_normal').html());
      network.canvas.body.container.style.cursor = 'default'
    });

    //Drag: Knoten verschieben - Anfang
    network.on("dragStart", function (params) {
      if (params.nodes.length > 0) {
        id = params.nodes[0];
        mode = dragNode;
      }
    });

    //Drag: Knoten verschieben - Ende
    network.on("dragEnd", function (params) {
      switch (mode) {
        case dragNode:
          nodes.update({id: id, 'x': params.pointer.canvas.x, 'y': params.pointer.canvas.y});
          jQuery.ajax({
            type: "PUT",
            url: "<%= concept_map_concepts_path(@map) %>/" + id + "/",
            data: {"concept": {'label': nodes.get(id).label, 'data':{'x': params.pointer.canvas.x, 'y': params.pointer.canvas.y, 'color':nodes.get(id).color.background}}}
          });
          hideForm();
      }
    });

    //Klick: Aktuelle Aktion abbrechen, Edit Node, Edit Edge, Add Node, Add Edge
    network.on("click", function (params) {
      switch (mode) {
        case editEdge:
        case editNode:
        case addNode:
          hideForm();
          break;
        case addEdge:
          if (params.nodes.length > 0) {
            $('#start').val(id);
            $('#end').val(params.nodes[0]);
            canvasX = Math.min(nodes.get(id).x, nodes.get(params.nodes[0]).x) + Math.abs(nodes.get(id).x - nodes.get(params.nodes[0]).x) / 2;
            canvasY = Math.min(nodes.get(id).y, nodes.get(params.nodes[0]).y) + Math.abs(nodes.get(id).y - nodes.get(params.nodes[0]).y) / 2;
            edge = edges.get({
              filter: function (item) {
                return (item.from == $('#start').val() && item.to == $('#end').val());
              }
            }, {returnType: 'Array'});
            if (edge.length > 0) {
              id = edge[0].id;
              mode = editEdge;
            }
            showForm();
          }
          else
            hideForm();
          break;
        case none:
          if (params.nodes.length > 0) {
            id = params.nodes[0];
            setTimeout(function() {
            <% if @concept_map.survey.concept_labels.blank? %>
              if (mode == none) {
                  canvasX = nodes.get(id).x;
                  canvasY = nodes.get(id).y;
                  mode = editNode;
                  $('#currentColor').css('background-color', nodes.get(id).color.background);
                  color = $('#currentColor').css('background-color');
                  $("#color").attr("value", color);
                  showForm();
              }
            <% end %>
            },
                175);
          }
          else
            if (params.edges.length > 0) {
              id = params.edges[0];
              setTimeout(function() {
                if (mode == none) {
                  canvasX = params.pointer.canvas.x;
                  canvasY = params.pointer.canvas.y;
                  mode = editEdge;
                  showForm();
                }
              },
                  175);
            }
      }
    });

    //Hold: Neue Kante erstellen - Anfang
    network.on("hold", function (params) {
      if (mode == none) {
        if (params.nodes.length > 0) {
          id = params.nodes[0];
          mode = addEdge;
          $('#context_help_text').html($('#ch_addedge').html());
        }
        else {
          <% if @concept_map.survey.concept_labels.blank? %>
            canvasX = params.pointer.canvas.x;
            canvasY = params.pointer.canvas.y;

            mode = addNode;
            showForm();
          <% end %>
        }
      }
    });

    function destroy() {
      switch (mode) {
        case editNode:
          jQuery.ajax({type: "DELETE", url: "<%= concept_map_concepts_path(@map) %>/" + id });
          break;
        case editEdge:
          jQuery.ajax({type: "DELETE", url: "<%= concept_map_links_path(@map) %>/" + id });
          break;
      }
      hideForm();
    }

    function showForm() {
      $("#panel").removeClass("hidden");
      $("#panel").attr("style", "position:absolute;left:" + ($("#map").offset().left+network.canvasToDOM({x: canvasX, y: canvasY}).x-$("#form").width()/2) + "px;top:" + ($("#map").offset().top+network.canvasToDOM({x: canvasX, y: canvasY}).y-$("#form").height()/2) + "px;");
      switch (mode) {
            case addNode:
              $('#context_help_text').html($('#ch_new').html());
              $('#action').html("<%= t('.action_new_node')%>");
              $("#entry_concept").val("");
              $("#entry_concept").removeClass("hidden");
              $("#entry_link").addClass("hidden");
              $("#delete").addClass("hidden");
              $("#form").attr('action', '<%= concept_map_concepts_path(@map) %>');
              $("#form").attr('method', 'post');
              $("#x").attr("value", canvasX);
              $("#y").attr("value", canvasY);
              $("#color").attr("value", color);
              $("#entry_concept").focus();
              $("#currentColor").show();
                break;
            case editNode:
              $('#context_help_text').html($('#ch_edit').html());
              $('#action').html("<%= t('.action_edit_node')%>");
              $("#entry_concept").val(nodes.get(id).label);
              $("#entry_concept").removeClass("hidden");
              $("#entry_link").addClass("hidden");
              $("#delete").removeClass("hidden");
              $("#form").attr('action', '<%= concept_map_concepts_path(@map) %>/' + id);
              $("#form").attr('method', 'put');
              $("#x").attr("value", canvasX);
              $("#y").attr("value", canvasY);
              $("#color").attr("value", color);
              $("#entry_concept").focus();
              $("#currentColor").show();
                break;
            case editEdge:
              $('#context_help_text').html($('#ch_edit').html());
              $('#action').html("<%= t('.action_edit_link')%>");
              $("#entry_link").val(edges.get(id).label);
              $("#entry_link").removeClass("hidden");
              $("#entry_concept").addClass("hidden");
              $("#delete").removeClass("hidden");
              $("#form").attr('action', '<%= concept_map_links_path(@map) %>/' + id);
              $("#form").attr('method', 'put');
              $("#entry_link").focus();
              $("#currentColor").hide();
                break;
            case addEdge:
              $('#context_help_text').html($('#ch_new').html());
              $('#action').html("<%= t('.action_new_link')%>");
              $("#entry_link").val("");
              $("#entry_link").removeClass("hidden");
              $("#entry_concept").addClass("hidden");
              $("#currentColor").hide();
              $("#delete").addClass("hidden");
              $("#form").attr('action', '<%= concept_map_links_path(@map) %>');
              $("#form").attr('method', 'post');
              $("#entry_link").focus();

        }
   }

    //Edit/Create Aktion beenden
    function hideForm() {
        $("#panel").addClass("hidden");
        $("#panel").focusout();
        network.unselectAll();
        mode = none;
        $('#context_help_text').html($('#ch_normal').html());
    }

    //Form bei ESC oder Enter schließen
    $("#entry_concept").on('keyup', function (e) {
      if (e.keyCode == 27)
        hideForm();
    });
    $("#entry_link").on('keyup', function (e) {
      if (e.keyCode == 27)
        hideForm();
    });

    function validateForm() {
      if (mode == addNode || mode == editNode) {
        t = $('#entry_concept').val();
        hideForm();
        node = nodes.get({
          filter: function (item) {
            return (item.label.toLocaleLowerCase() === t.toLocaleLowerCase());
          }
        });

        if (node == null)
            return true;
        else {
          network.focus(node[0].id);
          return false;
        }
      }
      else {
        hideForm();
        return true;
      }

    }

    function sendMail() {
      $('#emailgroup').removeClass('has-error');
      $('#emailgroup').removeClass('has-success');
      $('#submit').removeClass('btn-danger');
      $('#submit').removeClass('btn-success');
      if ($('#email').is(':valid') && $('#email').val() != '') {
        $.ajax({url: '<%= concept_map_path(@concept_map, format: :text)%>' + '?email=' + $('#email').val()});
        $('#submit').addClass('btn-success');
        $('#emailgroup').addClass('has-success');
      }
      else {
        $('#submit').addClass('btn-danger');
        $('#emailgroup').addClass('has-error');
      }
    }

    function changeColor(colorID) {
        $('#currentColor').css('background-color', $('#'+colorID).css('background-color'));
        color = $('#currentColor').css('background-color');
        $("#color").attr("value", color);
        return false;

    }


</script>
